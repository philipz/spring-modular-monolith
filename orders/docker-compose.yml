version: "3.9"

services:
  orders-db:
    image: postgres:17-alpine
    container_name: orders-db
    environment:
      POSTGRES_DB: ordersdb
      POSTGRES_USER: orders
      POSTGRES_PASSWORD: orders
    ports:
      - "5433:5432"
    volumes:
      - orders-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U orders -d ordersdb"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - orders-net

  orders-rabbitmq:
    image: rabbitmq:4.1.3-management-alpine
    container_name: orders-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5673:5672"
      - "15673:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - orders-net

  orders-zipkin:
    image: openzipkin/zipkin:3.5.1
    container_name: orders-zipkin
    environment:
      STORAGE_TYPE: mem
    ports:
      - "9412:9411"
    networks:
      - orders-net

  orders-service:
    image: philipz/orders-service:latest
    container_name: orders-service
    depends_on:
      orders-db:
        condition: service_healthy
      orders-rabbitmq:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://orders-db:5432/ordersdb
      SPRING_DATASOURCE_USERNAME: orders
      SPRING_DATASOURCE_PASSWORD: orders
      SPRING_RABBITMQ_HOST: orders-rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
      MANAGEMENT_ZIPKIN_TRACING_ENDPOINT: http://orders-zipkin:9411/api/v2/spans
      SERVER_PORT: 8091
      SPRING_MODULITH_EVENTS_SCHEMA: orders_events
      PRODUCT_API_BASE_URL: http://localhost:8080
    ports:
      - "8091:8091"
    networks:
      - orders-net

networks:
  orders-net:
    driver: bridge

volumes:
  orders-db-data:
