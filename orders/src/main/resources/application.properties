spring.application.name=orders-service
spring.threads.virtual.enabled=true
logging.pattern.correlation=[${spring.application.name:},%X{traceId:-},%X{spanId:-}]
logging.include-application-name=false

#### Server ####
server.port=${SERVER_PORT:8091}

#### Database ####
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5433/ordersdb}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:orders}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:orders}
spring.datasource.hikari.maximum-pool-size=${SPRING_DATASOURCE_POOL_SIZE:10}
spring.jpa.open-in-view=false
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=none

#### Liquibase ####
spring.liquibase.enabled=true
spring.liquibase.change-log=classpath:db/db.changelog-master.xml
spring.liquibase.default-schema=${SPRING_LIQUIBASE_SCHEMA:orders}
spring.liquibase.contexts=
spring.liquibase.drop-first=false

#### RabbitMQ ####
spring.rabbitmq.host=${SPRING_RABBITMQ_HOST:localhost}
spring.rabbitmq.port=${SPRING_RABBITMQ_PORT:5672}
spring.rabbitmq.username=${SPRING_RABBITMQ_USERNAME:guest}
spring.rabbitmq.password=${SPRING_RABBITMQ_PASSWORD:guest}
app.amqp.new-orders.bind=${APP_AMQP_NEW_ORDERS_BIND:true}

#### Modulith Events ####
spring.modulith.events.jdbc.schema=${SPRING_MODULITH_EVENTS_SCHEMA:events}
spring.modulith.events.jdbc.enabled=true
spring.modulith.events.jdbc.schema-initialization.enabled=true
spring.modulith.events.republish-outstanding-events-on-restart=true
spring.modulith.events.externalization.enabled=true
spring.modulith.events.externalization.outbound-adapter=amqp
spring.modulith.events.externalization.stderr-logging-enabled=false

#### Cache ####
bookstore.cache.enabled=${BOOKSTORE_CACHE_ENABLED:true}
bookstore.cache.max-size=${BOOKSTORE_CACHE_MAX_SIZE:1000}
bookstore.cache.time-to-live-seconds=${BOOKSTORE_CACHE_TTL:3600}
bookstore.cache.max-idle-seconds=${BOOKSTORE_CACHE_MAX_IDLE:0}
bookstore.cache.backup-count=${BOOKSTORE_CACHE_BACKUP_COUNT:1}
bookstore.cache.write-through=${BOOKSTORE_CACHE_WRITE_THROUGH:true}
bookstore.cache.write-batch-size=${BOOKSTORE_CACHE_WRITE_BATCH_SIZE:1}
bookstore.cache.write-delay-seconds=${BOOKSTORE_CACHE_WRITE_DELAY_SECONDS:0}
bookstore.cache.metrics-enabled=${BOOKSTORE_CACHE_METRICS_ENABLED:true}

#### Session ####
spring.session.store-type=hazelcast
spring.session.hazelcast.map-name=spring:session:sessions
spring.session.timeout=30m

#### Observability ####
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.probes.enabled=true
management.tracing.enabled=true
management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=${ZIPKIN_ENDPOINT:http://localhost:9411/api/v2/spans}
management.metrics.enable.jdbc=false
management.metrics.enable.hikaricp=false
management.metrics.tags.common.application=${spring.application.name}

#### Modulith ####
spring.modulith.observability.instrumentation.datasource.enabled=false
