{
  "permissions": {
    "allow": [
      "mcp__spec-workflow__get-template-context",
      "mcp__spec-workflow__create-spec-doc",
      "mcp__spec-workflow__request-approval",
      "mcp__spec-workflow__get-approval-status",
      "mcp__spec-workflow__delete-approval",
      "mcp__spec-workflow__get-spec-context",
      "mcp__spec-workflow__create-steering-doc",
      "mcp__spec-workflow__spec-workflow-guide",
      "mcp__spec-workflow__get-steering-context",
      "mcp__spec-workflow__spec-list",
      "mcp__spec-workflow__spec-status",
      "Bash(./mvnw test:*)",
      "Bash(find:*)",
      "mcp__sequential-thinking__sequentialthinking",
      "Bash(./mvnw spotless:apply:*)",
      "Bash(./mvnw clean:*)",
      "mcp__spec-workflow__manage-tasks",
      "Bash(xargs cat:*)",
      "Bash(xargs:*)",
      "Bash(pkill:*)",
      "Bash(./mvnw:*)",
      "mcp__ide__getDiagnostics",
      "Bash(docker exec:*)",
      "Bash(psql:*)",
      "Bash(docker logs:*)",
      "Bash(lsof:*)",
      "Bash(curl:*)",
      "Bash(grep:*)",
      "Bash(mkdir:*)",
      "mcp__spec-workflow__approvals",
      "Bash(claude-code-spec-workflow get-tasks:*)",
      "Bash(claude-code-spec-workflow get-spec-context:*)",
      "Bash(claude-code-spec-workflow get-steering-context:*)",
      "Bash(cat:*)",
      "Bash(../mvnw -ntp verify)",
      "mcp__spec-workflow__steering-guide",
      "Bash(claude-code-spec-workflow get-template-context:*)",
      "Bash(claude-code-spec-workflow:*)",
      "Bash(timeout:*)",
      "Bash(gtimeout:*)",
      "Bash(../mvnw:*)",
      "Bash(docker compose ps:*)",
      "Bash(docker compose logs:*)",
      "Bash(docker compose exec:*)",
      "Bash(test:*)",
      "Bash(npx:*)",
      "Read(//Users/cfh00805122/**)",
      "Bash(task test:*)",
      "Bash(node:*)",
      "Bash(git checkout:*)",
      "Bash(git stash:*)",
      "Bash(rm:*)",
      "Bash(tee:*)",
      "Bash(awk:*)",
      "Read(//private/tmp/**)",
      "Bash(git rm:*)",
      "Bash(git add:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfix: 移除不適用的 gRPC 測試並修正測試配置\n\n- 新增 TestSessionConfiguration 提供測試用 MapSessionRepository\n- 移除 orders 模組的 grpc 單元測試(GrpcOrderMapperTest, GrpcOrdersApiAdapterTest)和整合測試(OrdersGrpcIntegrationTest)\n  - 這些測試屬於獨立的 orders-service 專案，不應存在於 monolith 專案中\n  - 測試依賴 com.sivalabs.bookstore.orders.grpc.proto 套件，該套件在 monolith 專案中不存在\n- 更新 HazelcastConfigTests 和 BookStoreApplicationTests 導入 TestSessionConfiguration\n- 移除 OrdersCacheTestConfig (已被 TestSessionConfiguration 取代)\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(~/.m2/repository/com/google/protobuf/protoc/3.24.0/protoc-3.24.0-osx-aarch_64.exe --java_out=./target/test-proto --proto_path=./src/main/proto ./src/main/proto/orders.proto)",
      "Bash(~/.m2/repository/com/google/protobuf/protoc/3.24.0/protoc-3.24.0-osx-aarch_64.exe )",
      "Bash(./src/main/proto/orders.proto)",
      "Bash(jar tf:*)",
      "Bash(unzip:*)",
      "Bash(touch:*)",
      "Bash(docker-compose:*)",
      "Bash(docker compose:*)",
      "Bash(gh run view:*)"
    ]
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "spec-workflow"
  ]
}