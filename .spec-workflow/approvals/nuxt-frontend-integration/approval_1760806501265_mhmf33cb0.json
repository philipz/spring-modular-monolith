{
  "id": "approval_1760806501265_mhmf33cb0",
  "title": "Next.js Frontend Integration - Requirements Document",
  "filePath": ".spec-workflow/nuxt-frontend-integration/requirements.md",
  "type": "document",
  "status": "needs-revision",
  "createdAt": "2025-10-18T16:55:01.265Z",
  "category": "spec",
  "categoryName": "nuxt-frontend-integration",
  "response": "Feedback Summary (2 comments):\n\nSpecific Text Comments:\n1. \"### Observability\n- Frontend SHALL propagate trace...\": remove\n2. \"1. WHEN the backend application starts THEN an Ope...\": 以 monolith 後端專案的 OpenAPI 為主\n",
  "annotations": "{\n  \"decision\": \"needs-revision\",\n  \"comments\": [\n    {\n      \"type\": \"selection\",\n      \"comment\": \"remove\",\n      \"timestamp\": \"2025-10-18T16:57:19.054Z\",\n      \"selectedText\": \"### Observability\\n- Frontend SHALL propagate trace IDs from backend OpenTelemetry traces via HTTP headers\\n- Frontend SHALL send Web Vitals (LCP, FID, CLS) metrics to HyperDX endpoint\\n- API call durations SHALL be tracked and reported with percentiles (p50, p95, p99)\\n- User interactions SHALL be tracked: page views, button clicks, form submissions\\n- Frontend errors SHALL be captured with stack traces, user context, and breadcrumbs\\n- API errors SHALL be logged to console with request URL, method, status, and response body\\n- Frontend build process SHALL report bundle size analysis with largest dependencies identified\\n- Health check endpoint at `/actuator/health` SHALL verify frontend assets are loadable\",\n      \"highlightColor\": {\n        \"bg\": \"rgba(255, 235, 59, 0.3)\",\n        \"border\": \"#FFEB3B\",\n        \"name\": \"#ffeb3b\"\n      },\n      \"id\": \"comment_1760806639054_zafafov95\"\n    },\n    {\n      \"type\": \"selection\",\n      \"comment\": \"以 monolith 後端專案的 OpenAPI 為主\",\n      \"timestamp\": \"2025-10-18T16:58:10.391Z\",\n      \"selectedText\": \"1. WHEN the backend application starts THEN an OpenAPI specification SHALL be available at `/v3/api-docs` endpoint\\n2. WHEN the OpenAPI specification is generated THEN it SHALL include all public REST endpoints from catalog, orders, and cart modules\\n3. WHEN the OpenAPI specification is consumed THEN it SHALL define request/response schemas matching the backend DTOs (ProductDto, OrderDto, CartDto, etc.)\\n4. IF the backend API changes THEN the OpenAPI specification SHALL automatically reflect those changes\\n5. WHEN the OpenAPI specification is exported THEN it SHALL be saved to a shared location accessible by the frontend project\",\n      \"highlightColor\": {\n        \"bg\": \"rgba(255, 235, 59, 0.3)\",\n        \"border\": \"#FFEB3B\",\n        \"name\": \"#ffeb3b\"\n      },\n      \"id\": \"comment_1760806690391_fqgihgqd6\"\n    }\n  ],\n  \"summary\": \"Feedback Summary (2 comments):\\n\\nSpecific Text Comments:\\n1. \\\"### Observability\\n- Frontend SHALL propagate trace...\\\": remove\\n2. \\\"1. WHEN the backend application starts THEN an Ope...\\\": 以 monolith 後端專案的 OpenAPI 為主\\n\",\n  \"timestamp\": \"2025-10-18T16:58:14.044Z\"\n}",
  "respondedAt": "2025-10-18T16:58:14.092Z",
  "comments": [
    {
      "type": "selection",
      "comment": "remove",
      "timestamp": "2025-10-18T16:57:19.054Z",
      "selectedText": "### Observability\n- Frontend SHALL propagate trace IDs from backend OpenTelemetry traces via HTTP headers\n- Frontend SHALL send Web Vitals (LCP, FID, CLS) metrics to HyperDX endpoint\n- API call durations SHALL be tracked and reported with percentiles (p50, p95, p99)\n- User interactions SHALL be tracked: page views, button clicks, form submissions\n- Frontend errors SHALL be captured with stack traces, user context, and breadcrumbs\n- API errors SHALL be logged to console with request URL, method, status, and response body\n- Frontend build process SHALL report bundle size analysis with largest dependencies identified\n- Health check endpoint at `/actuator/health` SHALL verify frontend assets are loadable",
      "highlightColor": {
        "bg": "rgba(255, 235, 59, 0.3)",
        "border": "#FFEB3B",
        "name": "#ffeb3b"
      },
      "id": "comment_1760806639054_zafafov95"
    },
    {
      "type": "selection",
      "comment": "以 monolith 後端專案的 OpenAPI 為主",
      "timestamp": "2025-10-18T16:58:10.391Z",
      "selectedText": "1. WHEN the backend application starts THEN an OpenAPI specification SHALL be available at `/v3/api-docs` endpoint\n2. WHEN the OpenAPI specification is generated THEN it SHALL include all public REST endpoints from catalog, orders, and cart modules\n3. WHEN the OpenAPI specification is consumed THEN it SHALL define request/response schemas matching the backend DTOs (ProductDto, OrderDto, CartDto, etc.)\n4. IF the backend API changes THEN the OpenAPI specification SHALL automatically reflect those changes\n5. WHEN the OpenAPI specification is exported THEN it SHALL be saved to a shared location accessible by the frontend project",
      "highlightColor": {
        "bg": "rgba(255, 235, 59, 0.3)",
        "border": "#FFEB3B",
        "name": "#ffeb3b"
      },
      "id": "comment_1760806690391_fqgihgqd6"
    }
  ]
}