services:
  postgres:
    image: 'postgres:17-alpine'
    environment:
      - 'POSTGRES_DB=postgres'
      - 'POSTGRES_PASSWORD=postgres'
      - 'POSTGRES_USER=postgres'
    ports:
      - '5432:5432'
    networks:
      - proxy

  rabbitmq:
    image: 'rabbitmq:4.1.3-management'
    environment:
      - 'RABBITMQ_DEFAULT_USER=guest'
      - 'RABBITMQ_DEFAULT_PASS=guest'
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
      - proxy
  zipkin:
    image: 'openzipkin/zipkin:3.5.1'
    environment:
      - STORAGE_TYPE=mem
    ports:
      - '9411:9411'
    networks:
      - proxy

  monolith:
    image: sivaprasadreddy/spring-modular-monolith
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
      MANAGEMENT_ZIPKIN_TRACING_ENDPOINT: http://zipkin:9411/api/v2/spans
      # Hazelcast JVM optimization for Java modular environment
      JDK_JAVA_OPTIONS: "--add-modules java.se --add-exports java.base/jdk.internal.ref=ALL-UNNAMED --add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/sun.nio.ch=ALL-UNNAMED --add-opens java.management/sun.management=ALL-UNNAMED --add-opens jdk.management/com.sun.management.internal=ALL-UNNAMED"
    depends_on:
      - postgres
      - rabbitmq
      - zipkin
    restart: unless-stopped
    networks:
      - proxy

  webproxy:
    depends_on:
      - monolith
    build: webproxy
    networks:
      - proxy
    ports:
      - "8080:80"

networks:
  proxy: