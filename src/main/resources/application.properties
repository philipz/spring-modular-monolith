spring.application.name=spring-modular-monolith
spring.threads.virtual.enabled=true
logging.pattern.correlation=[${spring.application.name:},%X{traceId:-},%X{spanId:-}] 
logging.include-application-name=false
spring.docker.compose.lifecycle-management=start-only

#### Database Config ####
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/postgres}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:postgres}
spring.datasource.hikari.maximum-pool-size=${SPRING_DATASOURCE_POOL_SIZE:10}
spring.jpa.open-in-view=false
spring.jpa.show-sql=false
jdbc.datasource-proxy.query.enable-logging=false
jdbc.datasource-proxy.query.logger-name=bookstore.query-logger
jdbc.datasource-proxy.query.log-level=DEBUG
jdbc.datasource-proxy.multiline=false
logging.level.bookstore.query-logger=DEBUG

#### Database Migration Config ####
spring.liquibase.enabled=true
spring.liquibase.change-log=classpath:db/db.changelog-master.xml
spring.liquibase.contexts=
spring.liquibase.default-schema=
spring.liquibase.drop-first=false

#### RabbitMQ Config ####
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

# Enable new-orders topology binding (queue, DLQ, and exchange bindings)
app.amqp.new-orders.bind=true

#### Events Config ######
spring.modulith.events.jdbc.schema=events
spring.modulith.events.jdbc.schema-initialization.enabled=true
spring.modulith.events.republish-outstanding-events-on-restart=true
#spring.modulith.events.completion-mode=delete

#### Cache Config ######
# Enable/disable Hazelcast caching across all modules
bookstore.cache.enabled=true

# Cache sizing and performance settings
bookstore.cache.max-size=1000
bookstore.cache.time-to-live-seconds=3600
bookstore.cache.max-idle-seconds=0
bookstore.cache.backup-count=1

# Write-through cache behavior
bookstore.cache.write-through=true
bookstore.cache.write-batch-size=1
bookstore.cache.write-delay-seconds=0
bookstore.cache.read-backup-data=true

# Cache monitoring and metrics
bookstore.cache.metrics-enabled=true

# Circuit breaker configuration for cache fault tolerance
bookstore.cache.circuit-breaker.failure-threshold=5
bookstore.cache.circuit-breaker.recovery-timeout=30000

# Cache-specific TTL overrides (inventory has shorter TTL due to volatility)
# Orders cache: 3600 seconds (1 hour)
# Products cache: 3600 seconds (1 hour) 
# Inventory cache: 1800 seconds (30 minutes) - configured in HazelcastConfig

#### Actuator Config ######
management.endpoints.web.exposure.include=*
management.endpoint.health.probes.enabled=true
management.tracing.enabled=true
management.tracing.sampling.probability=1.0

# OpenTelemetry OTLP gRPC exporter configuration
# Note: Using gRPC protocol (port 4317) instead of HTTP (port 4318) for better performance
otlp.grpc.enabled=true
otlp.grpc.endpoint=${OTLP_ENDPOINT:http://localhost:4317}
otlp.grpc.timeout=10s
otlp.grpc.compression=gzip
otlp.grpc.headers.authorization=${HYPERDX_API_KEY:}

#### External Services ####
# REST API configuration removed during gRPC migration (2025-10-04)
# Previous REST endpoint: orders.service.api-url=${ORDERS_SERVICE_API_URL:http://localhost:8091/api/orders}
# Now using gRPC communication - see gRPC Config section below

#### Session Config ######
spring.session.store-type=hazelcast
spring.session.hazelcast.map-name=spring:session:sessions
spring.session.timeout=30m

#### Modulith Observability Config ######
# Disable module-specific datasource metrics to avoid Prometheus tag conflicts
spring.modulith.observability.instrumentation.datasource.enabled=false

# Alternative approach: Disable JDBC connection metrics entirely to avoid tag conflicts
management.metrics.enable.jdbc=false
management.metrics.enable.hikaricp=false

# Or use a custom metrics filter to exclude problematic metrics
management.metrics.tags.common.application=${spring.application.name}


#### gRPC Config ####
bookstore.grpc.server.port=9091
bookstore.grpc.server.health-check-enabled=true
bookstore.grpc.server.reflection-enabled=true
bookstore.grpc.server.max-inbound-message-size=4194304
bookstore.grpc.server.shutdown-grace-period-seconds=30

# gRPC client defaults
bookstore.grpc.client.target=localhost:9091
bookstore.grpc.client.deadline-ms=5000
bookstore.grpc.client.retry-enabled=true
bookstore.grpc.client.max-retry-attempts=3
logging.level.io.grpc=INFO
logging.level.com.sivalabs.bookstore.orders.grpc=DEBUG

